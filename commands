apt update

sudo apt -y install nginx

sudo add-apt-repository ppa:ondrej/php
sudo apt-get update
apt-get -y install php7.3-fpm php7.3-cli
apt install php7.3-mysql

apt-get install \
    php7.3-bcmath \
    php7.3-common \
    php7.3-curl \
    php7.3-xml \
    php7.3-common \
    php7.3-gd \
    php7.3-common \
    php7.3-intl \
    php7.3-json \
    php7.3-mbstring \
    php7.3-xml \
    php7.3-soap \
    php7.3-xml \
    php7.3-xsl \
    php7.3-zip \
	 --yes


apt-get install \
    php7.3-bcmath \
    php7.3-ctype \
    php7.3-curl \
    php7.3-dom \
    php7.3-fileinfo \
    php7.3-gd \
    php7.3-hash \
    php7.3-iconv \
    php7.3-intl \
    php7.3-json \
    php7.3-libxml \
    php7.3-mbstring \
    php7.3-openssl \
    php7.3-pcre \
    php7.3-pdo_mysql \
    php7.3-simplexml \
    php7.3-soap \
    php7.3-sockets \
    php7.3-sodium \
    php7.3-tokenizer \
    php7.3-xmlwriter \
    php7.3-xsl \
    php7.3-zip \
    php7.3-libxml \
    php7.3-openssl \
    --yes


vim /etc/php/7.3/fpm/php.ini
vim /etc/php/7.3/cli/php.ini
systemctl restart php7.3-fpm


sudo apt install -y mysql-server



ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'rootpass';
exit

mysql -u root -p
SELECT user,authentication_string,plugin,host FROM mysql.user;
CREATE USER 'magento2'@'localhost' IDENTIFIED BY 'Passwor8';
ALTER USER 'magento2'@'localhost' IDENTIFIED WITH mysql_native_password BY 'Passwor8';
!!! ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password'
GRANT ALL PRIVILEGES ON testserv6.* TO 'magento2'@'localhost' WITH GRANT OPTION;
flush privileges;
exit

mysql -u magento2 -p
CREATE DATABASE magento2;
exit


create database magento;
create user 'magento'@'localhost' IDENTIFIED BY 'magento';
GRANT ALL ON magento.* TO 'magento'@'localhost';
flush privileges;
exit




php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer

composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=2.3.5 /var/www/magento

cd /var/www/html/<magento install directory>

find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} +

find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} +

chown -R :www-data . # Ubuntu

chmod u+x bin/magento



Public Key: 68963e1caa917f788182766e6fd02d25
Private Key: 0119bf97b9c142b6adb23865dbf4b2ad

composer self-update --1
composer self-update --2 - did not worked and error had happened. composer self-update --stable

export COMPOSER_MEMORY_LIMIT=-1

bin/magento setup:install \
--base-url=http://testserv6.aheadworks.com \
--db-host=localhost \
--db-name=magento \
--db-user=magento \
--db-password=magento \
--admin-firstname=admin \
--admin-lastname=admin \
--admin-email=admin@admin.com \
--admin-user=admin \
--admin-password=admin123 \
--language=en_US \
--currency=USD \
--timezone=America/Chicago \
--use-rewrites=1


log_bin_trust_function_creators = 1 to my.cnf under /etc
systemctl restart mysqld

cd /var/www/html/magento2/bin

./magento deploy:mode:set developer


or 

php bin/magento setup:upgrade
php bin/magento setup:static-content:deploy -f
php bin/magento cache:flush
